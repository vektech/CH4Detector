C51 COMPILER V9.60.0.0   SIGNAL                                                            02/01/2020 23:09:39 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SIGNAL
OBJECT MODULE PLACED IN .\Objects\signal.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil\C51\BIN\C51.EXE ..\..\Code\Source\signal.c LARGE OPTIMIZE(8,SPEED) BROW
                    -SE INCDIR(..\..\Code\Include) DEBUG OBJECTEXTEND PRINT(.\Listings\signal.lst) TABS(2) OBJECT(.\Objects\signal.obj)

line level    source

   1          /**
   2           *******************************************************************************
   3           * @copyright 2017-2020, Electronic Technology Co. Ltd
   4           * @file      signal.c
   5           * @version   V1.0.0
   6           * @brief     
   7           * @warning   
   8           *******************************************************************************
   9           * @remarks
  10           * 1. Version                Date                 Author
  11           *    v1.0.0                 2020年1月1日          Unknown
  12           *    Modification: 创建文档
  13           *******************************************************************************
  14           */
  15          /* NEED FIX */
  16          /*******************************************************************************
  17           *                 Include File Section ('#include')
  18           ******************************************************************************/
  19          #include "GlobalAppDefine.h"
  20          
  21          #include "signal.h"
  22          #include "delay.h"
  23          #include "uart.h"
  24          #include "device.h"
  25          
  26          extern uint8_t rx_index;
  27          
  28          /*******************************************************************************
  29           *                 Macro Define Section ('#define')
  30           ******************************************************************************/
  31          #define CH4_EXCEEDED_LED_ON     LED_ALARM_ON;      /* 报警灯开 */
  32          #define CH4_EXCEEDED_LED_OFF    LED_ALARM_OFF;     /* 报警灯开 */
  33          
  34          #define SELFCHECK_LED_ON        do                              \
  35                                          {                               \
  36                                              LED_POWER_ON;  /* 电源灯开 */ \
  37                                              LED_FAULT_ON;  /* 故障灯开 */ \
  38                                              LED_ALARM_ON;  /* 报警灯开 */ \
  39                                              LED_LIFE_ON;   /* 寿命灯开 */ \
  40                                          } while(0)
  41          #define SELFCHECK_LED_OFF       do                               \
  42                                          {                                \
  43                                              LED_POWER_OFF; /* 电源灯关 */ \
  44                                              LED_FAULT_OFF; /* 故障灯关 */ \
  45                                              LED_ALARM_OFF; /* 报警灯关 */ \
  46                                              LED_LIFE_OFF;  /* 寿命灯关 */ \
  47                                          } while(0)
  48          
  49          #define DEMARCATION_LED_ON      do                               \
  50                                          {                                \
  51                                              LED_POWER_ON;  /* 电源灯开 */ \
  52                                              LED_FAULT_ON;  /* 故障灯开 */ \
  53                                              LED_ALARM_ON;  /* 报警灯开 */ \
  54                                              LED_LIFE_ON;   /* 寿命灯开 */ \
C51 COMPILER V9.60.0.0   SIGNAL                                                            02/01/2020 23:09:39 PAGE 2   

  55                                          } while(0)
  56          #define DEMARCATION_LED_OFF     do                               \
  57                                          {                                \
  58                                              LED_POWER_OFF; /* 电源灯关 */ \
  59                                              LED_FAULT_OFF; /* 故障灯关 */ \
  60                                              LED_ALARM_OFF; /* 报警灯关 */ \
  61                                              LED_LIFE_OFF;  /* 寿命灯关 */ \
  62                                          } while(0)
  63          
  64          #define FAULT_LED_ON            LED_FAULT_ON;      /* 故障灯开 */
  65          #define FAULT_LED_OFF           LED_FAULT_OFF;     /* 故障灯关 */
  66          
  67          #define EXPIRED_LED_ON          LED_LIFE_ON;       /* 寿命灯开 */
  68          #define EXPIRED_LED_OFF         LED_LIFE_OFF;      /* 寿命灯关 */
  69          
  70          /* 蜂鸣器状态1 */
  71          #define SOUND_STATE0            do                                \
  72                                          {                                 \
  73                                              SOUND1_ON;     /* 蜂鸣器1开 */ \
  74                                              SOUND2_OFF;    /* 蜂鸣器2关 */ \
  75                                          } while(0)
  76          /* 蜂鸣器状态2 */
  77          #define SOUND_STATE1            do                                \
  78                                          {                                 \
  79                                              SOUND1_OFF;    /* 蜂鸣器1关 */ \
  80                                              SOUND2_ON;     /* 蜂鸣器2开 */ \
  81                                          } while(0)
  82          /* 蜂鸣器关闭 */
  83          #define SOUND_OFF               do                                \
  84                                          {                                 \
  85                                              SOUND1_OFF;    /* 蜂鸣器1关 */ \
  86                                              SOUND2_OFF;    /* 蜂鸣器2关 */ \
  87                                          } while(0)
  88          
  89          /*******************************************************************************
  90           *                 Struct Define Section ('typedef')
  91           ******************************************************************************/
  92          
  93          /*******************************************************************************
  94           *                 File Static Prototype Declare Section ('static function')
  95           ******************************************************************************/
  96          static void signal_beeper(uint8_t interval, uint16_t repeat_time);
  97          
  98          /*******************************************************************************
  99           *                 Global Variable Declare Section ('variable')
 100           ******************************************************************************/
 101          
 102          /*******************************************************************************
 103           *                 File Static Variable Define Section ('static variable')
 104           ******************************************************************************/
 105          
 106          /*******************************************************************************
 107           *                 Normal Function Define Section ('function')
 108           ******************************************************************************/
 109          void device_alarm(enum alarm_type type)
 110          {
 111   1          uint16_t i = 0, k = 0;
 112   1          uint8_t j = 0;
 113   1      
 114   1          /* check rx_index */
 115   1          if (!rx_index)
 116   1          {
C51 COMPILER V9.60.0.0   SIGNAL                                                            02/01/2020 23:09:39 PAGE 3   

 117   2              /* rx_index = 0 中止定时器2 清该位将中止定时器2并将当前计数保存在TH2和TL2 */
 118   2              TR2 = 0;
 119   2          }
 120   1          else
 121   1          {
 122   2              /* rx_index = 1 打开定时器2 */
 123   2              TR2 = 1;
 124   2          }
 125   1      
 126   1          switch (type)
 127   1          {
 128   2              case Alarm_CH4_Exceeded:
 129   2              {
 130   3                  /* 报警灯开 */
 131   3                  CH4_EXCEEDED_LED_ON;
 132   3      
 133   3                  /* 蜂鸣器报警 */
 134   3                  signal_beeper(7, 3000);
 135   3      
 136   3                  /* 报警灯关 */
 137   3                  CH4_EXCEEDED_LED_OFF;
 138   3      
 139   3                  /* Brown-Out Detector 电源电压检测 */
 140   3                  check_BOD();
 141   3      
 142   3                  /* 打开定时器2 */
 143   3                  TR2 = 1;
 144   3                  
 145   3                  break;
 146   3              }
 147   2              case Alarm_Selfcheck:
 148   2              {
 149   3                  /* 控制四颗灯闪烁和蜂鸣器鸣响 该行为重复三次 */
 150   3                  for (j = 0; j < 3; j++)
 151   3                  {
 152   4                      /* 自检系列灯开 */
 153   4                      SELFCHECK_LED_ON;
 154   4      
 155   4                      /* 蜂鸣器报警 */
 156   4                      signal_beeper(7, 1000);
 157   4      
 158   4                      /* 自检系列灯关 */
 159   4                      SELFCHECK_LED_OFF;
 160   4      
 161   4                      /* 延时 1600 * 70 = 112000us */
 162   4                      for (k = 0; k < 1600; k++)
 163   4                      {
 164   5                          Delay10us(7);
 165   5                          /* Brown-Out Detector 电源电压检测 */
 166   5                          check_BOD();
 167   5                      }
 168   4                  }
 169   3                  /* 打开定时器2 */
 170   3                  TR2 = 1;
 171   3                  break;
 172   3              }
 173   2              case Alarm_Demarcation:
 174   2              {
 175   3                  /* 控制四颗灯闪烁和蜂鸣器鸣响 该行为重复三次 */
 176   3                  for (j = 0; j < 3; j++)
 177   3                  {
 178   4                      /* 标定系列灯开 */
C51 COMPILER V9.60.0.0   SIGNAL                                                            02/01/2020 23:09:39 PAGE 4   

 179   4                      DEMARCATION_LED_ON;
 180   4      
 181   4                      /* 蜂鸣器报警 */
 182   4                      signal_beeper(50, 150);
 183   4      
 184   4                      /* 标定系列灯关 */
 185   4                      DEMARCATION_LED_OFF;
 186   4      
 187   4                      /* 等待 200 * 70 = 14000us */
 188   4                      for (k = 0; k < 200; k++)
 189   4                      {
 190   5                          Delay10us(7);
 191   5                          /* Brown-Out Detector 电源电压检测 */
 192   5                          check_BOD();
 193   5                      }
 194   4                  }
 195   3                  /* 打开定时器2 */
 196   3                  TR2 = 1;
 197   3                  break;
 198   3              }   
 199   2              case Alarm_Fault:
 200   2              {
 201   3                  /* 故障灯开 */
 202   3                  FAULT_LED_ON;
 203   3      
 204   3                  /* 蜂鸣器报警 */
 205   3                  signal_beeper(10, 1000);
 206   3      
 207   3                  /* 故障灯关 */
 208   3                  FAULT_LED_OFF;
 209   3      
 210   3                  /* Brown-Out Detector 电源电压检测 */
 211   3                  check_BOD();
 212   3                  
 213   3                  /* 打开定时器2 */
 214   3                  TR2 = 1;
 215   3      
 216   3                  for (k = 0; k < 1800; k++)
 217   3                  {
 218   4                      Delay10us(10);
 219   4                      /* Brown-Out Detector 电源电压检测 */
 220   4                      check_BOD();
 221   4                  }
 222   3                  break;
 223   3              }
 224   2              case Alarm_Expired:
 225   2              {
 226   3                  /* 故障灯开 */
 227   3                  EXPIRED_LED_ON;
 228   3      
 229   3                  /* 打开定时器2 */
 230   3                  TR2 = 1;
 231   3      
 232   3                  for (k = 0; k < 1800; k++)
 233   3                  {
 234   4                      Delay10us(10);
 235   4                      /* Brown-Out Detector 电源电压检测 */
 236   4                      check_BOD();
 237   4                  }
 238   3      
 239   3                  /* 故障灯关 */
 240   3                  EXPIRED_LED_OFF;
C51 COMPILER V9.60.0.0   SIGNAL                                                            02/01/2020 23:09:39 PAGE 5   

 241   3                  
 242   3                  /* 打开定时器2 */
 243   3                  TR2 = 1;
 244   3      
 245   3                  for (k = 0; k < 1800; k++)
 246   3                  {
 247   4                      Delay10us(10);
 248   4                      /* Brown-Out Detector 电源电压检测 */
 249   4                      check_BOD();
 250   4                  }
 251   3                  break;
 252   3              }
 253   2              default:
 254   2                  break;
 255   2          }
 256   1      }
 257          
 258          /*******************************************************************************
 259           *                 File Static Function Define Section ('static function')
 260           ******************************************************************************/
 261          static void signal_beeper(uint8_t interval, uint16_t repeat_time)
 262          {
 263   1          uint16_t i = 0;
 264   1      
 265   1          do
 266   1          {
 267   2              /*  Brown-Out Detector 电源电压检测 */
 268   2              check_BOD();
 269   2              /* 蜂鸣器状态0 */
 270   2              SOUND_STATE0;
 271   2              Delay10us(interval);
 272   2              i++;
 273   2      
 274   2              /*  Brown-Out Detector 电源电压检测 */
 275   2              check_BOD();
 276   2              /* 蜂鸣器状态1 */
 277   2              SOUND_STATE1;
 278   2              Delay10us(interval);
 279   2              i++;
 280   2          } while (i < repeat_time);
 281   1      
 282   1          /* 蜂鸣器关闭 */
 283   1          SOUND_OFF;
 284   1      }
 285          
 286          /*******************************************************************************
 287           *                 End of File ('EOF')
 288           ******************************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    543    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
