C51 COMPILER V9.60.0.0   UART                                                              02/01/2020 20:45:29 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil\C51\BIN\C51.EXE ..\..\Code\Source\uart.c LARGE OPTIMIZE(8,SPEED) BROWSE
                    - INCDIR(..\..\Code\Include) DEBUG OBJECTEXTEND PRINT(.\Listings\uart.lst) TABS(2) OBJECT(.\Objects\uart.obj)

line level    source

   1          /**
   2           *******************************************************************************
   3           * @copyright 2017-2020, Electronic Technology Co. Ltd
   4           * @file      uart.c
   5           * @version   V1.0.0
   6           * @brief     
   7           * @warning   
   8           *******************************************************************************
   9           * @remarks
  10           * 1. Version                Date                 Author
  11           *    v1.0.0                 2020ƒÍ1‘¬1»’          Unknown
  12           *    Modification: ¥¥Ω®Œƒµµ
  13           *******************************************************************************
  14           */
  15          /* NEED FIX */
  16          /*******************************************************************************
  17           *                 Include File Section ('#include')
  18           ******************************************************************************/
  19          #include "N79E81x.h"
  20          #include "GlobalAppDefine.h"
  21          #include "uart.h"
  22          #include "delay.h"
  23          
  24          /*******************************************************************************
  25           *                 Macro Define Section ('#define')
  26           ******************************************************************************/
  27          
  28          /*******************************************************************************
  29           *                 Struct Define Section ('typedef')
  30           ******************************************************************************/
  31          
  32          /*******************************************************************************
  33           *                 File Static Prototype Declare Section ('static function')
  34           ******************************************************************************/
  35          
  36          /*******************************************************************************
  37           *                 Global Variable Declare Section ('variable')
  38           ******************************************************************************/
  39          uint8_t uart_buffer[20] = {0x00};
  40          uint8_t rx_index;
  41          uint8_t rx_finished;
  42          
  43          /* ”√”⁄‘⁄ Timer2 ÷–ºÏ≤È¥Æø⁄Ω” ‹≥¨ ± √ø¥ŒΩ” ’«Â¡„ ¡Ω¥Œ Timer2 ÷–∂œ∫ÛºÏ≤ÈΩ” ’µƒΩ·π˚ */
  44          uint8_t rx_count;
  45          
  46          /*******************************************************************************
  47           *                 File Static Variable Define Section ('static variable')
  48           ******************************************************************************/
  49          
  50          /*******************************************************************************
  51           *                 Normal Function Define Section ('function')
  52           ******************************************************************************/
  53          /* ---- Use timer1 as baudrate generator ---- */
  54          void uart_init(uint32_t bandrate)
C51 COMPILER V9.60.0.0   UART                                                              02/01/2020 20:45:29 PAGE 2   

  55          {
  56   1          /* SCON = 11010010B ¥Æø⁄øÿ÷∆
  57   1              - SM0/SM1[7:6] = 11B: Mode3 “Ï≤Ω11Œª÷°≥§∂» ∂® ±∆˜1“Á≥ˆ ±º‰ ≥˝“‘32ªÚ≥˝“‘16 
  58   1              - SM2[5]       = 0B:  Ω” ’”––ß, Œﬁ¬€µ⁄9Œª «∑Ò”–¬ﬂº≠µÁ∆Ω
  59   1              - REN[4]       = 1B:  ¥Úø™¥Æø⁄µƒΩ” ’π¶ƒ‹,Ω” ’ÕÍ≥…∫Û–Ë»Ìº˛«Â≥˝∏√Œª
  60   1              - TB8[3]       = 0B:  Mode2∫ÕMode3÷–“™±ª∑¢ÀÕµƒµ⁄æ≈Œª ˝æ›
  61   1              - RB8[2]       = 0B:  Mode2∫ÕMode3÷–“™Ω” ’µΩµƒµ⁄æ≈Œª ˝æ›
  62   1              - TI[1]        = 1B:  ∑¢ÀÕ÷–∂œ±Í÷æŒª, ≥˝Mode0Õ‚, ‘⁄¥Æø⁄∑¢ÀÕµΩÕ£÷πŒª ±÷√Œª, ∏√Œª±ÿ–Î”…»Ìº˛¿¥«Â≥˝
  63   1              - RI[0]        = 0B:  Ω” ’÷–∂œ±Í÷æ, Mode2∫ÕMode3œ¬, Ω” ’µΩµ⁄æ≈Œª ±÷√Œª, ∏√Œª±ÿ–Î”…»Ìº˛¿¥«Â≥˝
  64   1              */
  65   1          SCON = 0xD2;
  66   1      
  67   1          /* PCON = 0000 0000B µÁ‘¥øÿ÷∆
  68   1              - SMOD[7]  = 0 πÿ±’≤®Ãÿ¬ º”±∂ ‘⁄ƒ£ Ω1,2ªÚ3÷–¥Æø⁄≤®Ãÿ¬ º”±∂ πƒ‹Œª Ωˆ  ”√”⁄∂® ±∆˜1“Á≥ˆ◊˜Œ™Œ™≤®Ãÿ¬  ±
             -÷”‘¥ ±
  69   1              - SMOD0[6] = 0 πÿ±’÷°¥ÌŒÛºÏ≤‚π¶ƒ‹
  70   1              - POF[4]   = 0 …œµÁ∏¥Œª∫Û∏√Œª÷√1 ±Ì æ“ª¥Œ¿‰∏¥Œª …œµÁ∏¥ŒªÕÍ≥… ‘⁄∆‰À˚∏¥Œª∫Û∏√Œª±£≥÷≤ª±‰ Ω®“È»Ìº˛«Â∏√
             -±Í÷æ
  71   1              - GF1[3]   = 0 Õ®”√±Í÷æ1 Õ®”√±Í÷æø…”…”√ªß÷√ŒªªÚ«Â¡„
  72   1              - GF0[2]   = 0 Õ®”√±Í÷æ0 Õ®”√±Í÷æø…”…”√ªß÷√ŒªªÚ«Â¡„
  73   1              - PD[1]    = 0 …Ë÷√∏√Œª πMCUΩ¯»ÎµÙµÁƒ£ Ω ‘⁄¥Àƒ£ Ωœ¬ CPU∫ÕÕ‚…Ë ±÷”Õ£÷π ≥Ã–Úº∆ ˝∆˜PCπ“∆ ¥À ±Œ™◊Ó–°π
             -¶∫ƒ
  74   1              - IDL[0]   = 0 …Ë÷√∏√Œª πMCUΩ¯»Îø’œ–ƒ£ Ω ‘⁄¥Àƒ£ Ωœ¬ CPU ±÷”Õ£÷π «“≥Ã–Úº∆ ˝∆˜PCπ“∆
  75   1              */
  76   1          PCON = 0x00;
  77   1      
  78   1          /* TMOD = 0010 0000B ∂® ±∆˜0∫Õ1ƒ£ Ω≈‰÷√ 
  79   1              - [7]   = 0B  ∂® ±∆˜1 √≈øÿ÷∆ µ±TR1=1 ± ∂® ±∆˜1  ±÷”‘À––≤ªπ‹~INT1µƒ¬ﬂº≠µÁ∆Ω
  80   1              - [6]   = 0B  ∂® ±∆˜1 º∆ ˝∆˜/∂® ±∆˜—°‘Ò ∂® ±∆˜1ÀÊƒ⁄≤ø ±÷”∂¯µ›‘ˆ
  81   1              - [5:4] = 10B ƒ£ Ω2: 8Œª∂® ±∆˜/º∆ ˝∆˜¥¯◊‘∂Ø¥”TH1÷ÿ‘ÿƒ£ Ω
  82   1              - [3]   = 0B  ∂® ±∆˜0 √≈øÿ÷∆ µ±TR0=1 ± ∂® ±∆˜0  ±÷”‘À––≤ªπ‹~INT0µƒ¬ﬂº≠µÁ∆Ω
  83   1              - [2]   = 0B  ∂® ±∆˜0 º∆ ˝∆˜/∂® ±∆˜—°‘Ò ∂® ±∆˜0ÀÊƒ⁄≤ø ±÷”∂¯µ›‘ˆ
  84   1              - [1:0] = 00B ƒ£ Ω0: 8Œª∂® ±∆˜/º∆ ˝∆˜¥¯5Œª‘§∑÷∆µ TL1[4:0]
  85   1              */
  86   1          TMOD = 0x20;
  87   1      
  88   1      #ifdef FOSC_110592
                  TH1 = 256 - (28800 / bandrate); /* 11.059M/384=28800 */
              #endif
  91   1      #ifdef FOSC_184320
                  TH1 = 256 - (48000 / bandrate); /* 18.4320M/384=48000 */
              #endif
  94   1          /*  π”√∏√≈‰÷√ ‘⁄ø…IDE÷–Ω¯––∂®“Â°°FOSC_221184 */
  95   1      #ifdef FOSC_221184
  96   1          TH1 = 256 - (57600 / bandrate); /* 22.1184M/384=57600 */
  97   1      #endif
  98   1      #ifdef FOSC_331776
                  TH1 = 256 - (86400 / bandrate); /* 33.1776M/384=86400 */
              #endif
 101   1      #ifdef FOSC_368640
                  TH1 = 256 - (96000 / bandrate); /* 36.8640M/384=96000 */
              #endif
 104   1          /* ø™∆Ù∂® ±∆˜1 */
 105   1          TR1 = 1;
 106   1      }
 107          
 108          void uart_send(uint8_t byte)
 109          {
 110   1          /* ∆Ê≈º–£—È 0 = ≈º–£—È, 1 = ∆Ê–£—È */
 111   1      #if (UART_PARITY_SET == EVEN_PARITY)
 112   1          /* Ω´∑¢ÀÕµƒ ˝æ›∑≈÷¡ACC÷– */
 113   1          /* PSW ÷–µƒ PŒª Œ™∆Ê≈º±Í÷æ ¿€º”Ω·π˚Œ™∆Ê ˝ ±Œ™1 ≈º ˝ ±Œ™0 */
C51 COMPILER V9.60.0.0   UART                                                              02/01/2020 20:45:29 PAGE 3   

 114   1          ACC = byte;
 115   1          /* ≈º–£—È TB8 ¥Ê¥¢“™∑¢ÀÕµƒ–£—ÈŒª */
 116   1          TB8 = P;
 117   1      #else
                  /* Ω´∑¢ÀÕµƒ ˝æ›∑≈÷¡ACC÷– */
                  /* PSW ÷–µƒ PŒª Œ™∆Ê≈º±Í÷æ ¿€º”Ω·π˚Œ™∆Ê ˝ ±Œ™1 ≈º ˝ ±Œ™0 */
                  ACC = byte;
                  /* ∆Ê–£—È TB8 ¥Ê¥¢“™∑¢ÀÕµƒ–£—ÈŒª */
                  TB8 = ~P;
              #endif
 124   1          /* SBUF ¥Æ––ø⁄Ω” ’ªÚ’ﬂ∑¢ÀÕµƒ ˝æ›∂º∑≈‘⁄’‚∏ˆºƒ¥Ê∆˜÷–
 125   1              -  µº …œ∏ƒµÿ÷∑…œ”–2∏ˆ∂¿¡¢µƒ8Œªºƒ¥Ê∆˜ “ª∏ˆ”√”⁄Ω” ’ ˝æ› “ª∏ˆ”√”⁄∑¢ÀÕ ˝æ›
 126   1              - ∂‘À¸Ω¯––∂¡≤Ÿ◊˜Ω´ª·Ω” ’¥Æ–– ˝æ› ∂‘À¸Ω¯–––¥≤Ÿ◊˜‘Ú∑¢ÀÕ¥Æ–– ˝æ› 
 127   1              - √ø¥ŒœÚSBUF–¥»Î“ª◊÷Ω⁄ ˝æ› ∆Ù∂Ø“ª¥Œ∑¢ÀÕ 
 128   1              */
 129   1          SBUF = byte;
 130   1      }
 131          
 132          /* UART ÷–∂œ∑˛ŒÒ∫Ø ˝ */
 133          void UART_ISR(void) interrupt 4
 134          {
 135   1          uint8_t i = 0;
 136   1          bit parity_bit = 0;
 137   1      
 138   1          /* ∂¡π˝≥Ã RI º¥ Reception Interrupt Flag */
 139   1          if (RI == 1)
 140   1          {
 141   2              /* Clear reception flag for next reception */
 142   2              RI = 0;
 143   2      
 144   2              /* SBUF ¥Æ––ø⁄Ω” ’ªÚ’ﬂ∑¢ÀÕµƒ ˝æ›∂º∑≈‘⁄’‚∏ˆºƒ¥Ê∆˜÷–
 145   2                  -  µº …œ∏ƒµÿ÷∑…œ”–2∏ˆ∂¿¡¢µƒ8Œªºƒ¥Ê∆˜ “ª∏ˆ”√”⁄Ω” ’ ˝æ› “ª∏ˆ”√”⁄∑¢ÀÕ ˝æ›
 146   2                  - ∂‘À¸Ω¯––∂¡≤Ÿ◊˜Ω´ª·Ω” ’¥Æ–– ˝æ› ∂‘À¸Ω¯–––¥≤Ÿ◊˜‘Ú∑¢ÀÕ¥Æ–– ˝æ› 
 147   2                  - √ø¥ŒœÚSBUF–¥»Î“ª◊÷Ω⁄ ˝æ› ∆Ù∂Ø“ª¥Œ∑¢ÀÕ 
 148   2                  */
 149   2              ACC = SBUF;
 150   2      
 151   2              /* PSW ÷–µƒ PŒª Œ™∆Ê≈º±Í÷æ ¿€º”Ω·π˚Œ™∆Ê ˝ ±Œ™1 ≈º ˝ ±Œ™0 */
 152   2              if (P)
 153   2              {
 154   3                  /* Œ™∆Ê ˝ ±÷√1 */
 155   3                  parity_bit = 1;
 156   3              }
 157   2      
 158   2          /* ∆Ê≈º–£—È 0=≈º–£—È 1=∆Ê–£—È */
 159   2      #if (UART_PARITY_SET == EVEN_PARITY)
 160   2              /* ≈º–£—È */
 161   2              if (RB8 == (parity_bit))
 162   2              {
 163   3                  /* ∂¡SBUF ¥Ê»Îrxbuf÷– */
 164   3                  uart_buffer[rx_index++] = SBUF;
 165   3                  /* Rx ¥Ê¥¢ø’º‰Ω´¬˙ */
 166   3                  if (rx_index >= (sizeof(uart_buffer) - 1))
 167   3                  {
 168   4                      /* UART0 πÿ±’Ω” ’π¶ƒ‹ */
 169   4                      UART0_RX_DISABLE;
 170   4                      /* Ω” ’ÕÍ≥… */
 171   4                      rx_finished = 1;
 172   4                  }
 173   3              }
 174   2      #else
                      /* ∆Ê–£—È */
C51 COMPILER V9.60.0.0   UART                                                              02/01/2020 20:45:29 PAGE 4   

                      if (RB8 == (~parity_bit))
                      {
                          /* ∂¡SBUF ¥Ê»Îrxbuf÷– */
                          uart_buffer[rx_index++] = SBUF;
                          /* Rx ¥Ê¥¢ø’º‰¬˙ XXX Œ™∫Œ∫Õ«∞œÓ≤ªÕ¨ */
                          if (rx_index >= sizeof(uart_buffer))
                          {
                              /* UART0 πÿ±’Ω” ’π¶ƒ‹ */
                              UART0_RX_DISABLE;
                              /* Ω” ’ÕÍ≥… */
                              rx_finished = 1;
                          }
                      }
              #endif
 190   2              /* ∂¡¥Æø⁄ ˝æ›÷±µΩ¥Ê¥¢ø’º‰Ω´¬˙Œ™÷π */
 191   2              rx_count = 0;
 192   2          }
 193   1          /* –¥÷–∂œ ¥À¥¶«Â≥˝–¥÷–∂œ±Í÷æ */
 194   1          else
 195   1          {
 196   2              /* Clear transmit flag for next transmition */
 197   2              TI = 0;
 198   2          }
 199   1          /* XXX  πƒ‹TIME2∂® ±∆˜ “ÚŒ™‘⁄∑‰√˘∆˜œÏ÷Æ«∞ ∞—TR2πÿµÙ¡À ∑‰√˘∆˜∂¿’ºCPU ±º‰ 
 200   1             À˘“‘“ªµ©Ω” ’µΩ ˝æ› ‘Ú∞—TIME2¥Úø™“‘‘ˆº”¥Æø⁄Ω” ’ÕÍ≥…≈–∂œµƒ µ ±–‘ */
 201   1          TR2 = 1;
 202   1      }
 203          
 204          /*******************************************************************************
 205           *                 File Static Function Define Section ('static function')
 206           ******************************************************************************/
 207          
 208          /*******************************************************************************
 209           *                 End of File ('EOF')
 210           ******************************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    147    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     23       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
