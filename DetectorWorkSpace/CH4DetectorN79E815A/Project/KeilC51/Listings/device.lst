C51 COMPILER V9.60.0.0   DEVICE                                                            02/01/2020 20:45:29 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DEVICE
OBJECT MODULE PLACED IN .\Objects\device.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil\C51\BIN\C51.EXE ..\..\Code\Source\device.c LARGE OPTIMIZE(8,SPEED) BROW
                    -SE INCDIR(..\..\Code\Include) DEBUG OBJECTEXTEND PRINT(.\Listings\device.lst) TABS(2) OBJECT(.\Objects\device.obj)

line level    source

   1          /**
   2           *******************************************************************************
   3           * @copyright 2017-2020, Electronic Technology Co. Ltd
   4           * @file      device.c
   5           * @version   V1.0.0
   6           * @brief     
   7           * @warning   
   8           *******************************************************************************
   9           * @remarks
  10           * 1. Version                Date                 Author
  11           *    v1.0.0                 2020年1月1日          Unknown
  12           *    Modification: 创建文档
  13           *******************************************************************************
  14           */
  15          /* NEED FIX */
  16          /*******************************************************************************
  17           *                 Include File Section ('#include')
  18           ******************************************************************************/
  19          #include "GlobalAppDefine.h"
  20          #include "device.h"
  21          
  22          #include "delay.h"
  23          #include "uart.h"
  24          #include "sensor.h"
  25          #include "timer.h"
  26          #include "adc.h"
  27          #include "i2c.h"
  28          #include "flash.h"
  29          
  30          /*******************************************************************************
  31           *                 Macro Define Section ('#define')
  32           ******************************************************************************/
  33          bit EA_save_bit;
  34          
  35          #define set_BOF   \
  36              EA_save_bit = EA;      \
  37              EA = 0;       \
  38              TA = 0xAA;    \
  39              TA = 0x55;    \
  40              PMCR |= SET_BIT3;\
  41              EA = EA_save_bit;
  42          
  43          #define clr_BOF   \
  44              EA_save_bit = EA;      \
  45              EA = 0;       \
  46              TA = 0xAA;    \
  47              TA = 0x55;    \
  48              PMCR &= CLR_BIT3;\
  49              EA = EA_save_bit;
  50          
  51          /*******************************************************************************
  52           *                 Struct Define Section ('typedef')
  53           ******************************************************************************/
  54          
C51 COMPILER V9.60.0.0   DEVICE                                                            02/01/2020 20:45:29 PAGE 2   

  55          /*******************************************************************************
  56           *                 File Static Prototype Declare Section ('static function')
  57           ******************************************************************************/
  58          
  59          /*******************************************************************************
  60           *                 Global Variable Declare Section ('variable')
  61           ******************************************************************************/
  62          /* Bit for flags */
  63          /* 设备第一次上电标志 */
  64          bit device_first_power_on = false;
  65          
  66          /* 设备掉电计数 */
  67          uint8_t device_power_down_count = 0;
  68          
  69          /*******************************************************************************
  70           *                 File Static Variable Define Section ('static variable')
  71           ******************************************************************************/
  72          
  73          /*******************************************************************************
  74           *                 Normal Function Define Section ('function')
  75           ******************************************************************************/
  76          void device_init(void)
  77          {
  78   1          /* 全局中断使能位 0 = 关闭所有中断 */
  79   1          EA = 0;
  80   1      
  81   1          /* P0.0配置为推挽输出模式 其他P0端口配置为准双向模式 
  82   1              - 设置成推挽输出，有大电流驱动能力
  83   1              - P0.0 电磁阀控制IO
  84   1              */
  85   1          /* 端口0输出模式配置1 */
  86   1          P0M1 = 0x00;
  87   1          /* 端口0输出模式配置2 */
  88   1          P0M2 = 0x01;
  89   1      
  90   1          /* P1.6 P1.7配置为推挽输出模式 其他P1端口配置为准双向模式 
  91   1              - I2C的PxM1,PxM2相应位需要设置成1
  92   1              - P1.6 ICPDAT
  93   1              - P1.7 ICPCLK
  94   1              */
  95   1          /* 端口1输出模式配置1 */
  96   1          P1M1 |= 0xC0;
  97   1          /* 端口1输出模式配置2 */
  98   1          P1M2 |= 0xC0;
  99   1      
 100   1          /* P2.2 P2.4配置为推挽输出模式 其他P2端口配置为准双向模式 
 101   1              - 设置成推挽输出，有大电流驱动能力
 102   1              - P2.2 继电器控制IO
 103   1              - P2.4 电源灯控制IO
 104   1              */
 105   1          /* 端口2输出模式配置1 */
 106   1          P2M1 = 0x00;
 107   1          /* 端口2输出模式配置2 */
 108   1          P2M2 = 0x14;
 109   1      
 110   1          /* P3M1->P1S位 使能端口P1的史密特触发输入缓冲 增强手刺抑制能力 主要针对I2C */
 111   1          P3M1 |= 0x20;
 112   1      
 113   1          /* P2.2 = 0 继电器关 */
 114   1          DELAY_OFF;
 115   1          /* P0.0 = 0 电磁阀关 */
 116   1          VALVE_OFF;
C51 COMPILER V9.60.0.0   DEVICE                                                            02/01/2020 20:45:29 PAGE 3   

 117   1      
 118   1          Delay1ms(3000);
 119   1      
 120   1          /* P2.2 = 0 继电器关 */
 121   1          DELAY_OFF;
 122   1          /* P0.0 = 0 电磁阀关 */
 123   1          VALVE_OFF;
 124   1      
 125   1          /* 附加功能选择寄存器 选择串口管脚
 126   1              - DPS      = 0 选择标准8051单DPTR 
 127   1              - DisP26   = 0 打开P2.6数字输入输出功能
 128   1              - UART_Sel = 0 选择P1.0 P1.1 作为串口管脚
 129   1              - SPI_Sel  = 0 选择P1.7 P1.6 P1.4 P0.0 作为SPI管脚
 130   1              */
 131   1          AUXR1 = UAER_PORT_SELECT;
 132   1      
 133   1          /* 全局中断使能位 1 = 打开所有中断 */
 134   1          EA = 1;
 135   1      
 136   1          /* 使能串口中断 1 = 设定TI(SCON.1)或RI(SCON.0)*/
 137   1          ES = 1;
 138   1          /* 定时器2运行控制 1 = 打开定时器2 */
 139   1          TR2 = 1;
 140   1          /* 拓展中断使能寄存器<EIE> 1 = 打开定时器2中断 */
 141   1          ET2 = 1;
 142   1          /* 中断优先级寄存器高字节 PBODH = 1 设置BOD检测中断高优先级为最高优先级 */
 143   1          IPH |= 0X20;
 144   1      
 145   1          Delay1ms(1000);
 146   1      
 147   1          /* 9600 Baud Rate @ 22.1184MHz */
 148   1          uart_init(9600);
 149   1      
 150   1          /* 定时器2初始化 */
 151   1          timer2_init();
 152   1      
 153   1          /* ADC初始化 */
 154   1          adc_init();
 155   1          
 156   1          /* I2C初始化 */
 157   1          i2c_init();
 158   1      }
 159          
 160          /* Brown-Out Detector 电源电压检测  Power-On Reset 上电复位 */
 161          void check_BOD(void)
 162          {
 163   1          /* 如果设备掉电计数超限 进行掉电处理函数 */
 164   1          if (device_power_down_count >= POWER_DOWN_LIMIT)
 165   1          {
 166   2              /* 继电器关 */
 167   2              DELAY_OFF;
 168   2              /* 电磁阀关 */
 169   2              VALVE_OFF;
 170   2              /* 故障灯关 */
 171   2              LED_FAULT_OFF;
 172   2              /* 报警灯关 */
 173   2              LED_ALARM_OFF;
 174   2              /* 传感器寿命灯关 */
 175   2              LED_LIFE_OFF;
 176   2              /* 蜂鸣器1关 */
 177   2              SOUND1_OFF;
 178   2              /* 蜂鸣器2关 */
C51 COMPILER V9.60.0.0   DEVICE                                                            02/01/2020 20:45:29 PAGE 4   

 179   2              SOUND2_OFF;
 180   2              /* 电源灯关 */
 181   2              LED_POWER_OFF;
 182   2      
 183   2              /* YYY 向FLASH中写掉电记录 */
 184   2              ///FLASH_OP(DOWNPOWER_RECORD);
 185   2      
 186   2              /* 掉电计数复位 */
 187   2              device_power_down_count = 0;
 188   2              /* 预热标记复位 */
 189   2              sensor_preheat = false;
 190   2              /* 预热时间清零 */
 191   2              sensor_preheat_time_count = 0;
 192   2      
 193   2              while (1) //软件复位
 194   2              {
 195   3                  /* 关闭全局中断 */
 196   3                  EA = 0;
 197   3      
 198   3                  /* ISP 功能的关键SFR读写保护 */
 199   3                  TA = 0xAA;
 200   3                  TA = 0x55;
 201   3                  /* 将CHPCON中的 BS = 0 
 202   3                      - 写：定义了复位后MCU启动的区块 0 = 下一次从APROM启动 1 = 下一次从LDROM启动 
 203   3                      - 读：定义了前次复位后MCU启动的区块 0 = 前次从APROM启动 1 = 前次从LDROM启动 */
 204   3                  CHPCON &= 0xfd;
 205   3      
 206   3                  /* ISP 功能的关键SFR读写保护 */
 207   3                  TA = 0xAA;
 208   3                  TA = 0x55;
 209   3                  /* 将CHPCON中的 SWRST = 1 设置该位为逻辑1将引起软件复位 复位完成后由硬件自动清零 */
 210   3                  CHPCON |= 0x80;
 211   3              }
 212   2          }
 213   1      }
 214          
 215          /* Brown-Out Detector 电源电压检测中断服务程序 Vecotr @ 0x43 */
 216          void BOD_ISR(void) interrupt 8
 217          {
 218   1          /* 清楚欠压检测标志 */
 219   1          clr_BOF;
 220   1          /* XXX */
 221   1          device_power_down_count++;
 222   1          if (device_power_down_count >= POWER_DOWN_LIMIT)
 223   1          {
 224   2              device_power_down_count = POWER_DOWN_LIMIT;
 225   2              /* EBO 为BOD电源电压检测的中断使能位 关中断 sbit EBO = IE ^ 5 */
 226   2              EBO = 0;
 227   2          }
 228   1      }
 229          
 230          /*******************************************************************************
 231           *                 File Static Function Define Section ('static function')
 232           ******************************************************************************/
 233          
 234          /*******************************************************************************
 235           *                 End of File ('EOF')
 236           ******************************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    197    ----
C51 COMPILER V9.60.0.0   DEVICE                                                            02/01/2020 20:45:29 PAGE 5   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
